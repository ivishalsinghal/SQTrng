sonar.host.url=https://mtxwddop04.sce.com:9000
sonar.login:d6ec85110c0f4b1b579e25fc231cf26006d82d1f

#Name of SQ Project here
sonar.projectKey=test002

sonar.sources=/var/lib/jenkins/workspace/Folder1/Job2/src
sonar.java.binaries=/var/lib/jenkins/workspace/Folder1/Job2/target/classes


#Jenkins pipeline script1
#Its working without specifying node name
node('masterLinux'){
stage ('checkout'){
    git branch: 'Dev1',
    credentialsid: '',
    url: 'https://github.com/ivishalsinghal/Feb26.git'
}
stage ('SQ Analysis'){
//   sh '/usr/bin/apache-maven-3.6.0/bin/mvn  sonar:sonar -Dsonar.host.url=https://mtxwddop04.sce.com:9000  -Djavax.net.ssl.trustStore=/etc/pki/ca-trust/extracted/java/cacerts -Djavax.net.ssl.trustStorePassword=changeit -Dsonar.login:e008039cd78824624699fa83fa78ebc35532589d -Dsonar.projectKey=test002 -Dsonar.sources=/var/lib/jenkins/workspace/Try/test002/src -Dsonar.java.binaries=/var/lib/jenkins/workspace/Try/test002/target/classes'
sh '/var/lib/jenkins/SQ/sonar-scanner-3.2.0.1227/bin/sonar-scanner scan -Djavax.net.ssl.trustStore=/etc/pki/ca-trust/extracted/java/cacerts -Djavax.net.ssl.trustStorePassword=changeit -Dsonar.host.url=https://mtxwddop04.sce.com:9000 -Dsonar.login=e008039cd78824624699fa83fa78ebc35532589d -Dsonar.projectKey=test002 -Dsonar.sources=/var/lib/jenkins/workspace/Try/Feb26_2/src -Dsonar.java.binaries=/var/lib/jenkins/workspace/Try/Feb26_2/target/classes'
}

stage ('Build OK ?'){
    input 'Proceed to Build'
}
stage ('Build'){
    sh '/usr/bin/apache-maven-3.6.0/bin/mvn clean package  -DproxySet=true -DproxyHost=proxy.sce.com -DproxyPort=80  -Dhttps.nonProxyHosts=*.sce.com'
}
stage ('Upload'){
    nexusArtifactUploader artifacts: [[artifactId: 'project12', classifier: '', file: '/var/lib/jenkins/workspace/Try/Feb26_2/target/DummyApplication.war', type: 'war']], credentialsId: 'a6a88997-fcaa-45bf-adca-eaf3f8603809', groupId: 'day1', nexusUrl: 'mtxwddop05:8081', nexusVersion: 'nexus3', protocol: 'https', repository: 'test01', version: '25'
}
}


#Good url for pipeline
#https://www.blazemeter.com/blog/how-to-use-the-jenkins-scripted-pipeline
